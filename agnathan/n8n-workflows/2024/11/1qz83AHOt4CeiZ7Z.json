{
  "active": false,
  "connections": {
    "Set times": {
      "main": [
        [
          {
            "node": "Edit times",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "12 Hours from now": {
      "main": [
        [
          {
            "node": "Format - MMMM DD YY",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "On clicking 'execute'": {
      "main": [
        [
          {
            "node": "Set times",
            "type": "main",
            "index": 0
          },
          {
            "node": "12 Hours from now",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "createdAt": "2024-11-27T05:58:20.663Z",
  "id": "1qz83AHOt4CeiZ7Z",
  "meta": {
    "templateCredsSetupCompleted": true
  },
  "name": "Working with Date & Time",
  "nodes": [
    {
      "parameters": {},
      "name": "On clicking 'execute'",
      "type": "n8n-nodes-base.manualTrigger",
      "position": [
        660,
        600
      ],
      "typeVersion": 1,
      "id": "3cd37e3e-d8ef-433e-85db-30d8f03aafc5"
    },
    {
      "parameters": {
        "content": "## 2. Advanced way: Using Expressions\nIn this `Set` node, we set dates using [Luxon expressions](https://docs.n8n.io/code-examples/expressions/luxon/) for the following formats:\n\nNow - `{{$now}}`\nCurrent time with seconds - `{{$now.toLocaleString(DateTime.TIME_WITH_SECONDS)}}`\nToday - `{{$today}}`\nTomorrow - `{{$today.plus({days: 1})}}`\nOne hour ago - `{{$now.minus({hours: 1})}}`\nWeekday name - `{{$today.weekdayLong}}`\n\n",
        "height": 400,
        "width": 560
      },
      "name": "Note",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1000,
        580
      ],
      "typeVersion": 1,
      "id": "715df980-cf57-4b8d-a6dc-dfd5b56efae1"
    },
    {
      "parameters": {
        "content": "### Click the `Execute Workflow` button and double click on the nodes to see the input and output items.",
        "height": 100,
        "width": 420
      },
      "name": "Note3",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        180,
        600
      ],
      "typeVersion": 1,
      "id": "0bacf093-df34-4ad1-8af6-eabee8502298"
    },
    {
      "parameters": {
        "action": "calculate",
        "value": "={{$now}}",
        "duration": 12,
        "timeUnit": "hours",
        "options": {}
      },
      "name": "12 Hours from now",
      "type": "n8n-nodes-base.dateTime",
      "position": [
        1040,
        400
      ],
      "typeVersion": 1,
      "id": "f484eebb-cfae-4e68-97e4-6833feff7ea9"
    },
    {
      "parameters": {
        "content": "## 1. Simple Way: Using the Date & Time node\nThere are two actions available within the `Date & Time` node:\n1. Calculating a date - adding/substracting minutes,hours, days, etc.\n2. Formatting a date\n\n",
        "height": 340,
        "width": 560
      },
      "name": "Note1",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1000,
        220
      ],
      "typeVersion": 1,
      "id": "2d2ee6a7-eec1-4ce9-9392-12cd85cf592b"
    },
    {
      "parameters": {
        "content": "### 2.1 Working with an existing time string\nAs items pass between nodes, n8n saves dates as ISO strings. This means that in order to work with the data as a date again, we need to convert it back using `DateTime.fromISO('yyyy-mm-dd')`\n. Once doing that, we are able to apply date and time function again such as : `{{DateTime.fromISO($json[\"Now\"]).toFormat('yyyy LLL dd')}}`",
        "height": 320,
        "width": 480
      },
      "name": "Note4",
      "type": "n8n-nodes-base.stickyNote",
      "position": [
        1500,
        680
      ],
      "typeVersion": 1,
      "id": "7f405ac1-ec23-41b6-9ff9-d3622dfb9384"
    },
    {
      "parameters": {
        "values": {
          "string": [
            {
              "name": "Now",
              "value": "={{$now}}"
            },
            {
              "name": "Current time with seconds",
              "value": "={{$now.toLocaleString(DateTime.TIME_WITH_SECONDS)}}"
            },
            {
              "name": "Today",
              "value": "={{$today}}"
            },
            {
              "name": "Tomorrow",
              "value": "={{$today.plus({days: 1})}}"
            },
            {
              "name": "One hour from now",
              "value": "={{$now.minus({hours: 1})}}"
            },
            {
              "name": "Weekday",
              "value": "={{$today.weekdayLong}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Set times",
      "type": "n8n-nodes-base.set",
      "position": [
        1040,
        840
      ],
      "typeVersion": 1,
      "id": "189d0028-0f28-4be9-80eb-f3f0cca327a5"
    },
    {
      "parameters": {
        "keepOnlySet": true,
        "values": {
          "string": [
            {
              "name": "Current time",
              "value": "={{DateTime.fromISO($json[\"Now\"])}}"
            },
            {
              "name": "Current time formatted",
              "value": "={{DateTime.fromISO($json[\"Now\"]).toFormat('yyyy LLL dd')}}"
            }
          ]
        },
        "options": {}
      },
      "name": "Edit times",
      "type": "n8n-nodes-base.set",
      "position": [
        1600,
        840
      ],
      "typeVersion": 1,
      "id": "bc68ff11-895a-47e0-ae33-fab637b8ef41"
    },
    {
      "parameters": {
        "value": "={{$now}}",
        "toFormat": "MMMM DD YYYY",
        "options": {}
      },
      "name": "Format - MMMM DD YY",
      "type": "n8n-nodes-base.dateTime",
      "position": [
        1280,
        400
      ],
      "typeVersion": 1,
      "id": "8dbca382-047a-4d8b-bf96-ae1522a2f278"
    }
  ],
  "pinData": {},
  "repo_name": "n8n-workflows",
  "repo_owner": "agnathan",
  "repo_path": "agnathan/n8n-workflows",
  "settings": {
    "executionOrder": "v1"
  },
  "staticData": null,
  "tags": [
    {
      "createdAt": "2024-12-01T14:21:25.482Z",
      "updatedAt": "2024-12-01T14:21:25.482Z",
      "id": "SIJWhQ43whBotfGd",
      "name": "Community Examples"
    }
  ],
  "triggerCount": 0,
  "updatedAt": "2024-12-01T14:22:22.000Z",
  "versionId": "f3760bea-285f-45c5-b6e5-e08ac83c57a0"
}